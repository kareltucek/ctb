instruction	INT	ADDI		1	1	$$arg1 + $$arg2
instruction	INT	ADDI		4	4	_mm_add_epi32($$arg1, $$arg2)
instruction	INT	LDI	input	1	1	$$input
instruction	INT	LDI	input	4	4	_mm_loadu_si128((const __m128i*)&$$input)
instruction	INT	MULI		1	1	$$arg1 * $$arg2
instruction	INT	MULI		2	2	_mm_shuffle_epi32(_mm_mul_epu32($$arg1, $$arg2), _MM_SHUFFLE (0,0,2,0))
instruction	INT	STI	output	1	1	$$output = $$arg1
instruction	INT	STI	output	4	4	_mm_storeu_si128((__m128i*)&$$output, $$arg1)
type_version	FLOAT	1	float
type_version	FLOAT	4	__m128
type_version	FLOAT	2	__m128
type_conversion	FLOAT	2	4	_mm_movelh_ps($$arg1, $$arg2)	
type_version	INT	1	int
type_version	INT	2	__m128i
type_version	INT	4	__m128i
type_conversion	INT	2	4	_mm_unpacklo_epi32($$arg1,$$arg2)	
type_conversion	INT	4	2	$$arg1	_mm_srli_si128($$arg1,4)
